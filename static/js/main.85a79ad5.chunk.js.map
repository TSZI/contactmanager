{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","upContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","NotFount","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85a79ad5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id\r\n                        ? (contact = action.payload)\r\n                        : contact\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action));\r\n        }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(\r\n            'https://jsonplaceholder.typicode.com/users'\r\n        );\r\n        this.setState({ contacts: res.data });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(\r\n                `https://jsonplaceholder.typicode.com/users/${id}`\r\n            );\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        } catch (e) {\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>\r\n                                {name}{' '}\r\n                                <i\r\n                                    onClick={() =>\r\n                                        this.setState({\r\n                                            showContactInfo: !this.state\r\n                                                .showContactInfo\r\n                                        })\r\n                                    }\r\n                                    className=\"fas fa-sort-down\"\r\n                                    style={{ cursor: 'pointer' }}\r\n                                />\r\n                                <i\r\n                                    className=\"fas fa-times\"\r\n                                    style={{\r\n                                        cursor: 'pointer',\r\n                                        float: 'right',\r\n                                        color: 'red'\r\n                                    }}\r\n                                    onClick={this.onDeleteClick.bind(\r\n                                        this,\r\n                                        id,\r\n                                        dispatch\r\n                                    )}\r\n                                />\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i\r\n                                        className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black',\r\n                                            marginRight: '1rem'\r\n                                        }}\r\n                                    />\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Email: {email}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Phone: {phone}\r\n                                    </li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span>{' '}\r\n                                List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n\r\n        const { contacts } = this.state;\r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n    const { branding } = props;\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n                <div className=\"container\">\r\n                    <a href=\"/\" className=\"navbar-brand\">\r\n                        {branding}\r\n                    </a>\r\n                    <div>\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/\" className=\"nav-link\">\r\n                                    <i className=\"fas fa-home\" /> Home\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                    <i className=\"fas fa-plus\" /> Add\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link to=\"/about\" className=\"nav-link\">\r\n                                    <i className=\"fas fa-question\" /> About\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg', {\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post(\r\n            'https://jsonplaceholder.typicode.com/users',\r\n            newContact\r\n        );\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form\r\n                                    action=\"\"\r\n                                    onSubmit={this.onSubmit.bind(\r\n                                        this,\r\n                                        dispatch\r\n                                    )}\r\n                                >\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport uuid from 'uuid';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`\r\n        );\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone } = this.state;\r\n\r\n        // Check for errors\r\n        if (name === '') {\r\n            this.setState({ errors: { name: 'Name is required' } });\r\n            return;\r\n        }\r\n        if (email === '') {\r\n            this.setState({ errors: { email: 'Email is required' } });\r\n            return;\r\n        }\r\n        if (phone === '') {\r\n            this.setState({ errors: { phone: 'Phone is required' } });\r\n            return;\r\n        }\r\n\r\n        const upContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(\r\n            `https://jsonplaceholder.typicode.com/users/${id}`,\r\n            upContact\r\n        );\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form\r\n                                    action=\"\"\r\n                                    onSubmit={this.onSubmit.bind(\r\n                                        this,\r\n                                        dispatch\r\n                                    )}\r\n                                >\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        placeholder=\"Enter Email\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">404 Page Not Found</span>\r\n            </h1>\r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data =>\r\n                this.setState({\r\n                    title: data.title,\r\n                    body: data.body\r\n                })\r\n            );\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount...');\r\n    // }\r\n\r\n    // componentDidUpdate() {\r\n    //     console.log('componentDidUpdate...');\r\n    // }\r\n\r\n    // componentWillUpdate() {\r\n    //     console.log('componentWillUpdate...');\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState) {\r\n    //     console.log('componentWillReceiveProps...');\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(prevProps, prevState) {\r\n    //     return {\r\n    //         test: 'something'\r\n    //     };\r\n    // }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    //     console.log('getSnapshotBeforeUpdate...');\r\n    // }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport About from './components/pages/About';\nimport NotFount from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\">\n                        <Header branding=\"Contact Manager\" />\n                        <div className=\"container\">\n                            <Switch>\n                                <Route exact path=\"/\" component={Contacts} />\n                                <Route\n                                    exact\n                                    path=\"/contact/add\"\n                                    component={AddContact}\n                                />\n                                <Route\n                                    exact\n                                    path=\"/contact/edit/:id\"\n                                    component={EditContact}\n                                />\n                                <Route exact path=\"/about\" component={About} />\n                                <Route exact path=\"/test\" component={Test} />\n                                <Route component={NotFount} />\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}